[{"D:\\1_learning\\1_TEST\\currency_exchange\\src\\index.tsx":"1","D:\\1_learning\\1_TEST\\currency_exchange\\src\\App.tsx":"2","D:\\1_learning\\1_TEST\\currency_exchange\\src\\ui\\BaseCurrency\\BaseCurrency.tsx":"3","D:\\1_learning\\1_TEST\\currency_exchange\\src\\ui\\Body\\Body.tsx":"4","D:\\1_learning\\1_TEST\\currency_exchange\\src\\ui\\SideBar\\SideBar.tsx":"5","D:\\1_learning\\1_TEST\\currency_exchange\\src\\ui\\Converter\\Converter.tsx":"6","D:\\1_learning\\1_TEST\\currency_exchange\\src\\ui\\CurrencyRate\\CurrencyRate.tsx":"7","D:\\1_learning\\1_TEST\\currency_exchange\\src\\bll\\store.ts":"8","D:\\1_learning\\1_TEST\\currency_exchange\\src\\bll\\basicCurrencyReducer.ts":"9","D:\\1_learning\\1_TEST\\currency_exchange\\src\\api\\API.ts":"10","D:\\1_learning\\1_TEST\\currency_exchange\\src\\bll\\converterReducer.ts":"11","D:\\1_learning\\1_TEST\\currency_exchange\\src\\bll\\currencyRateReducer.ts":"12"},{"size":533,"mtime":1611664006936,"results":"13","hashOfConfig":"14"},{"size":693,"mtime":1611674607823,"results":"15","hashOfConfig":"14"},{"size":1219,"mtime":1611675560023,"results":"16","hashOfConfig":"14"},{"size":624,"mtime":1611675461191,"results":"17","hashOfConfig":"14"},{"size":455,"mtime":1611675534506,"results":"18","hashOfConfig":"14"},{"size":2046,"mtime":1611673185033,"results":"19","hashOfConfig":"14"},{"size":1428,"mtime":1611674001952,"results":"20","hashOfConfig":"14"},{"size":601,"mtime":1611671529275,"results":"21","hashOfConfig":"14"},{"size":1536,"mtime":1611669712682,"results":"22","hashOfConfig":"14"},{"size":588,"mtime":1611672234114,"results":"23","hashOfConfig":"14"},{"size":2127,"mtime":1611673101596,"results":"24","hashOfConfig":"14"},{"size":1678,"mtime":1611674239127,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"iq084s",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\1_learning\\1_TEST\\currency_exchange\\src\\index.tsx",[],"D:\\1_learning\\1_TEST\\currency_exchange\\src\\App.tsx",["52"],"D:\\1_learning\\1_TEST\\currency_exchange\\src\\ui\\BaseCurrency\\BaseCurrency.tsx",["53"],"import React, { ChangeEvent, useCallback, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { DataCurrencyType, setBaseCurrency } from '../../bll/basicCurrencyReducer';\r\nimport { AppRootStateType } from '../../bll/store';\r\nimport style from './BaseCurrency.module.css'\r\n\r\nconst BaseCurrency = React.memo(() => {\r\n\r\n\tconst [selectedCurr, setSelectedCurr] = useState('EUR');\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst nameOfCurrency = useSelector<AppRootStateType, Array<DataCurrencyType>>(name => name.basicCurrency.currencyData);\r\n\r\n\tconst onCurrencyChange = useCallback((event: ChangeEvent<HTMLSelectElement>) => {\r\n\t\tdispatch(setBaseCurrency(event.currentTarget.value));\r\n\t\tsetSelectedCurr(event.currentTarget.value);\r\n\t}, [dispatch])\r\n\r\n\treturn (\r\n\t\t<div className={style.header}>\r\n\t\t\t<div className={style.container}>\r\n\t\t\t\t<span>Choose you base currency: </span> <select onChange={onCurrencyChange} value={selectedCurr}>\r\n\t\t\t\t\t{nameOfCurrency.map((op: DataCurrencyType, index) => {\r\n\t\t\t\t\t\treturn <option key={index}>{`${op.currency}`}</option>\r\n\t\t\t\t\t})}\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n});\r\n\r\nexport default BaseCurrency;","D:\\1_learning\\1_TEST\\currency_exchange\\src\\ui\\Body\\Body.tsx",[],"D:\\1_learning\\1_TEST\\currency_exchange\\src\\ui\\SideBar\\SideBar.tsx",[],"D:\\1_learning\\1_TEST\\currency_exchange\\src\\ui\\Converter\\Converter.tsx",["54"],"import React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getExhangeRate, ListOfCurrenciesType, setNewTotalValue } from '../../bll/converterReducer';\r\nimport { AppRootStateType } from '../../bll/store';\r\nimport style from './Converter.module.css';\r\n\r\nconst Converter = React.memo(() => {\r\n\r\n\tconst [value, setValue] = useState('');\r\n\tconst [firstCur, setFirstCur] = useState('EUR');\r\n\tconst [secondCur, setSecondCur] = useState('USD');\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst fullListOfCurrencies = useSelector<AppRootStateType, Array<ListOfCurrenciesType>>(curr => curr.converter.listOfCurrencies);\r\n\tconst exchangeValue = useSelector<AppRootStateType, number>(val => val.converter.totalValue)\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getExhangeRate(firstCur, secondCur));\r\n\t}, [firstCur, secondCur])\r\n\r\n\tconst onInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetValue(event.currentTarget.value);\r\n\t}\r\n\r\n\tconst onFirstSelectChange = (event: ChangeEvent<HTMLSelectElement>) => {\r\n\t\tsetFirstCur(event.currentTarget.value);\r\n\t}\r\n\tconst onSecondSelectChange = (event: ChangeEvent<HTMLSelectElement>) => {\r\n\t\tsetSecondCur(event.currentTarget.value);\r\n\t}\r\n\tconst onBtnClickChangeValue = () => {\r\n\t\tdispatch(setNewTotalValue(+value))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={style.converter}>\r\n\t\t\t<div>\r\n\t\t\t\t<input type=\"text\" value={value} onChange={onInputChange} />\r\n\t\t\t\t<select value={firstCur} onChange={onFirstSelectChange}>\r\n\t\t\t\t\t{fullListOfCurrencies.map((curr, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<option key={index}>{`${curr.currencyName}`}</option>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</select>\r\n\t\t\t\t<select value={secondCur} onChange={onSecondSelectChange}>\r\n\t\t\t\t\t{fullListOfCurrencies.map((curr, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<option key={index}>{`${curr.currencyName}`}</option>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}</select>\r\n\t\t\t\t<button onClick={onBtnClickChangeValue}>LET'S GO</button>\r\n\t\t\t\t<span>{exchangeValue}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n});\r\n\r\nexport default Converter;","D:\\1_learning\\1_TEST\\currency_exchange\\src\\ui\\CurrencyRate\\CurrencyRate.tsx",[],"D:\\1_learning\\1_TEST\\currency_exchange\\src\\bll\\store.ts",[],"D:\\1_learning\\1_TEST\\currency_exchange\\src\\bll\\basicCurrencyReducer.ts",[],"D:\\1_learning\\1_TEST\\currency_exchange\\src\\api\\API.ts",[],"D:\\1_learning\\1_TEST\\currency_exchange\\src\\bll\\converterReducer.ts",[],"D:\\1_learning\\1_TEST\\currency_exchange\\src\\bll\\currencyRateReducer.ts",[],{"ruleId":"55","severity":1,"message":"56","line":16,"column":5,"nodeType":"57","endLine":16,"endColumn":7,"suggestions":"58"},{"ruleId":"59","severity":1,"message":"60","line":3,"column":10,"nodeType":"61","messageId":"62","endLine":3,"endColumn":17},{"ruleId":"55","severity":1,"message":"56","line":20,"column":5,"nodeType":"57","endLine":20,"endColumn":26,"suggestions":"63"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["64"],"@typescript-eslint/no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar",["65"],{"desc":"66","fix":"67"},{"desc":"68","fix":"69"},"Update the dependencies array to be: [dispatch]",{"range":"70","text":"71"},"Update the dependencies array to be: [dispatch, firstCur, secondCur]",{"range":"72","text":"73"},[517,519],"[dispatch]",[852,873],"[dispatch, firstCur, secondCur]"]